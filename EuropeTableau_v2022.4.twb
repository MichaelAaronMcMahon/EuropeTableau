<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Parameter 2' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='Development of average annual wages' inline='true' name='federated.1yykh800fpcjrj1g29wh91khwtqw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Development of average annual wages' name='textscan.12uxhja1ktihr01fy3u6w1g4k85w'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/wage' filename='Development of average annual wages.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.12uxhja1ktihr01fy3u6w1g4k85w' name='Development of average annual wages.csv' table='[Development of average annual wages#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='integer' name='F5' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.12uxhja1ktihr01fy3u6w1g4k85w' name='Development of average annual wages.csv' table='[Development of average annual wages#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
            <column datatype='integer' name='F5' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[Development of average annual wages.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Development of average annual wages.csv' datatype='table' name='[__tableau_internal_object_id__].[Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Development of average annual wages.csv' id='Development of average annual wages.csv_6048C13CA8744B0FBD3070C38CA35DAB'>
            <properties context=''>
              <relation connection='textscan.12uxhja1ktihr01fy3u6w1g4k85w' name='Development of average annual wages.csv' table='[Development of average annual wages#csv]' type='table'>
                <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='integer' name='F2' ordinal='1' />
                  <column datatype='integer' name='F3' ordinal='2' />
                  <column datatype='integer' name='F4' ordinal='3' />
                  <column datatype='integer' name='F5' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Country_Gross Average Monthly Wages in 2020' inline='true' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Country_Gross Average Monthly Wages in 2020' name='textscan.1f1nmcr0h5pmcf1cbqlml08cs4bz'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/wage' filename='Country_Gross Average Monthly Wages in 2020.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Development of average annual wages' name='textscan.0mbexpy06riwk31g729og1pffyed'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/wage' filename='Development of average annual wages.csv' password='' server='' />
          </named-connection>
          <named-connection caption='GDP_per_capita_table' name='textscan.1pylho00l4lis317vge771vvhkmd'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/eugdp' filename='GDP_per_capita_table.csv' password='' server='' />
          </named-connection>
          <named-connection caption='europe' name='textscan.01agyii0a40go312v6gcq0ykpa2u'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/eupop' filename='europe.csv' password='' server='' />
          </named-connection>
          <named-connection caption='population_by_education_level' name='textscan.1vbotfz078oziw16ydtg41egi973'>
            <connection class='textscan' directory='C:/Users/Admin/Downloads/edu' filename='population_by_education_level.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1f1nmcr0h5pmcf1cbqlml08cs4bz' name='Country_Gross Average Monthly Wages in 2020.csv' table='[Country_Gross Average Monthly Wages in 2020#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1f1nmcr0h5pmcf1cbqlml08cs4bz' name='Country_Gross Average Monthly Wages in 2020.csv' table='[Country_Gross Average Monthly Wages in 2020#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.01agyii0a40go312v6gcq0ykpa2u' name='europe.csv' table='[europe#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country_name' ordinal='1' />
              <column datatype='string' name='Continent' ordinal='2' />
              <column datatype='string' name='region' ordinal='3' />
              <column datatype='string' name='local_name' ordinal='4' />
              <column datatype='string' name='capital' ordinal='5' />
              <column datatype='string' name='area' ordinal='6' />
              <column datatype='integer' name='population' ordinal='7' />
              <column datatype='real' name='population_per_sq_km' ordinal='8' />
              <column datatype='real' name='male_life_expectancy' ordinal='9' />
              <column datatype='real' name='female_life_expectancy' ordinal='10' />
              <column datatype='real' name='birth_rate' ordinal='11' />
              <column datatype='real' name='death_rate' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.1vbotfz078oziw16ydtg41egi973' name='population_by_education_level.csv' table='[population_by_education_level#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='unit' ordinal='0' />
              <column datatype='boolean' name='sex' ordinal='1' />
              <column datatype='string' name='age' ordinal='2' />
              <column datatype='string' name='isced11' ordinal='3' />
              <column datatype='string' name='geography' ordinal='4' />
              <column datatype='integer' name='date' ordinal='5' />
              <column datatype='real' name='value' ordinal='6' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country_Gross Average Monthly Wages in 2020.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Country_Gross Average Monthly Wages in 2020.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]</local-name>
            <parent-name>[Country_Gross Average Monthly Wages in 2020.csv]</parent-name>
            <remote-alias>Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[local_name]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>local_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>capital</remote-name>
            <remote-type>129</remote-type>
            <local-name>[capital]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>capital</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_per_sq_km</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_per_sq_km]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>population_per_sq_km</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_life_expectancy]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>male_life_expectancy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_life_expectancy]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>female_life_expectancy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[birth_rate]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>birth_rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_rate]</local-name>
            <parent-name>[europe.csv]</parent-name>
            <remote-alias>death_rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>11</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>sex</remote-alias>
            <ordinal>16</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isced11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isced11]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>isced11</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geography</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geography]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>geography</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[population_by_education_level.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='popChange' datatype='real' name='[Calculation_602356453316616192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[birth_rate]-[death_rate]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Albania *&quot;' value='Albania' />
          <alias key='&quot;Armenia *&quot;' value='Armenia' />
          <alias key='&quot;Austria *&quot;' value='Austria' />
          <alias key='&quot;Azerbaijan *&quot;' value='Azerbaijan' />
          <alias key='&quot;Belarus *&quot;' value='Belarus' />
          <alias key='&quot;Belgium *&quot;' value='Belgium' />
          <alias key='&quot;Bosnia and Herzegovina *&quot;' value='Bosnia and Herzegovina' />
          <alias key='&quot;Bulgaria *&quot;' value='Bulgaria' />
          <alias key='&quot;Canada *&quot;' value='Canada' />
          <alias key='&quot;Croatia *&quot;' value='Croatia' />
          <alias key='&quot;Cyprus *&quot;' value='Cyprus' />
          <alias key='&quot;Czech Republic *&quot;' value='Czech Republic' />
          <alias key='&quot;Denmark *&quot;' value='Denmark' />
          <alias key='&quot;Estonia *&quot;' value='Estonia' />
          <alias key='&quot;Finland *&quot;' value='Finland' />
          <alias key='&quot;France *&quot;' value='France' />
          <alias key='&quot;Georgia *&quot;' value='Georgia' />
          <alias key='&quot;Germany *&quot;' value='Germany' />
          <alias key='&quot;Greece *&quot;' value='Greece' />
          <alias key='&quot;Hungary *&quot;' value='Hungary' />
          <alias key='&quot;Iceland *&quot;' value='Iceland' />
          <alias key='&quot;Ireland *&quot;' value='Ireland' />
          <alias key='&quot;Israel *&quot;' value='Israel' />
          <alias key='&quot;Italy *&quot;' value='Italy' />
          <alias key='&quot;Kazakhstan *&quot;' value='Kazakhstan' />
          <alias key='&quot;Kyrgyzstan *&quot;' value='Kyrgyzstan' />
          <alias key='&quot;Latvia *&quot;' value='Latvia' />
          <alias key='&quot;Lithuania *&quot;' value='Lithuania' />
          <alias key='&quot;Luxembourg *&quot;' value='Luxembourg' />
          <alias key='&quot;Moldova *&quot;' value='Moldova' />
          <alias key='&quot;Montenegro *&quot;' value='Montenegro' />
          <alias key='&quot;Netherlands *&quot;' value='Netherlands' />
          <alias key='&quot;North Macedonia *&quot;' value='North Macedonia' />
          <alias key='&quot;Norway *&quot;' value='Norway' />
          <alias key='&quot;Poland *&quot;' value='Poland' />
          <alias key='&quot;Portugal *&quot;' value='Portugal' />
          <alias key='&quot;Romania *&quot;' value='Romania' />
          <alias key='&quot;Russia *&quot;' value='Russia' />
          <alias key='&quot;Serbia *&quot;' value='Serbia' />
          <alias key='&quot;Slovakia *&quot;' value='Slovakia' />
          <alias key='&quot;Slovenia *&quot;' value='Slovenia' />
          <alias key='&quot;Spain *&quot;' value='Spain' />
          <alias key='&quot;Sweden *&quot;' value='Sweden' />
          <alias key='&quot;Switzerland *&quot;' value='Switzerland' />
          <alias key='&quot;Tajikistan *&quot;' value='Tajikistan' />
          <alias key='&quot;Turkey *&quot;' value='Turkey' />
          <alias key='&quot;Turkmenistan *&quot;' value='Turkmenistan' />
          <alias key='&quot;Ukraine *&quot;' value='Ukraine' />
          <alias key='&quot;United Kingdom *&quot;' value='United Kingdom' />
          <alias key='&quot;United States *&quot;' value='United States' />
          <alias key='&quot;Uzbekistan *&quot;' value='Uzbekistan' />
        </aliases>
      </column>
      <column datatype='string' name='[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Country_Gross Average Monthly Wages in 2020.csv' datatype='table' name='[__tableau_internal_object_id__].[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='europe.csv' datatype='table' name='[__tableau_internal_object_id__].[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='population_by_education_level.csv' datatype='table' name='[__tableau_internal_object_id__].[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Birth Rate' datatype='real' name='[birth_rate]' role='measure' type='quantitative' />
      <column caption='Capital' datatype='string' name='[capital]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;Czechia&quot;' value='Czech Republic' />
        </aliases>
      </column>
      <column caption='Date' datatype='integer' name='[date]' role='measure' type='quantitative' />
      <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
      <column caption='Female Life Expectancy' datatype='real' name='[female_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Geography' datatype='string' name='[geography]' role='dimension' type='nominal' />
      <column caption='Isced11' datatype='string' name='[isced11]' role='dimension' type='nominal' />
      <column caption='Local Name' datatype='string' name='[local_name]' role='dimension' type='nominal' />
      <column caption='Male Life Expectancy' datatype='real' name='[male_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Per Sq Km' datatype='real' name='[population_per_sq_km]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Sex' datatype='boolean' name='[sex]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]' derivation='None' name='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Country,Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Admin/Documents/My Tableau Repository/Datasources/Country_Gross Average Monthly Wages in 2020.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/21/2023 03:42:56 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F' table='[Extract].[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F' table='[Extract].[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]' type='table' />
            <relation name='europe.csv_621685D9A79A4B74A2706BD4DCA2175B' table='[Extract].[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]' type='table' />
            <relation name='population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62' table='[Extract].[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <refresh>
            <refresh-event add-from-file-path='Country_Gross Average Monthly Wages in 2020' increment-value='%null%' refresh-type='create' rows-inserted='610063' timestamp-start='2023-09-21 03:42:53.761' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>Country_Gross Average Monthly Wages in 2020.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]</local-name>
              <parent-name>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</parent-name>
              <remote-alias>Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)</remote-alias>
              <ordinal>1</ordinal>
              <family>Country_Gross Average Monthly Wages in 2020.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>2</ordinal>
              <family>europe.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>3</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>4</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>5</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>local_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[local_name]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>local_name</remote-alias>
              <ordinal>6</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>capital</remote-name>
              <remote-type>129</remote-type>
              <local-name>[capital]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>capital</remote-alias>
              <ordinal>7</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>area</remote-alias>
              <ordinal>8</ordinal>
              <family>europe.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>9</ordinal>
              <family>europe.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_per_sq_km</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_per_sq_km]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>population_per_sq_km</remote-alias>
              <ordinal>10</ordinal>
              <family>europe.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_life_expectancy]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>male_life_expectancy</remote-alias>
              <ordinal>11</ordinal>
              <family>europe.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_life_expectancy]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>female_life_expectancy</remote-alias>
              <ordinal>12</ordinal>
              <family>europe.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[birth_rate]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>birth_rate</remote-alias>
              <ordinal>13</ordinal>
              <family>europe.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_rate]</local-name>
              <parent-name>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</parent-name>
              <remote-alias>death_rate</remote-alias>
              <ordinal>14</ordinal>
              <family>europe.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[unit]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>unit</remote-alias>
              <ordinal>15</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sex</remote-name>
              <remote-type>11</remote-type>
              <local-name>[sex]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>sex</remote-alias>
              <ordinal>16</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[age]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>age</remote-alias>
              <ordinal>17</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>isced11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[isced11]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>isced11</remote-alias>
              <ordinal>18</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geography</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geography]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>geography</remote-alias>
              <ordinal>19</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>20</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>20</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value</remote-name>
              <remote-type>5</remote-type>
              <local-name>[value]</local-name>
              <parent-name>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</parent-name>
              <remote-alias>value</remote-alias>
              <ordinal>21</ordinal>
              <family>population_by_education_level.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>71946</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;7,712.7 USD&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;935.8 USD (2013)&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;865.3 USD (2019)&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;6,228.8 USD&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;859.6 USD&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;808.1 USD&quot;</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>&quot;5,862.5 USD&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;804.4 USD&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;5,782.6 USD&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;749.6 USD&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;514.9 USD&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;5,701.1 USD&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;512.8 USD&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;5,247.5 USD&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;430.0 USD&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;416.1 USD&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;4,764.8 USD&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;411.6 USD (2019)&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;4,681.6 USD&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;400.8 USD (2019)&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;394.5 USD (2016)&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;4,489.7 USD&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;388.0 USD&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;363.5 USD (2019)&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;4,352.7 USD&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;265.1 USD&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;4,253.5 USD&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;246.9 USD (2019)&quot;</bucket>
            </map>
            <map to='#e44043'>
              <bucket>&quot;142.6 USD (2015)&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;4,063.5 USD&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;4,061.7 USD&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;4,045.0 USD&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;3,952.7 USD&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;3,616.2 USD&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;3,351.7 USD&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;2,658.8 USD&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;2,520.2 USD&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;2,494.7 USD&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;2,286.1 USD&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;1,757.8 USD&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;1,650.2 USD&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;1,628.2 USD&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;1,623.8 USD&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;1,572.4 USD&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;1,450.6 USD&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;1,392.9 USD&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;1,342.8 USD&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;1,302.6 USD&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;1,138.9 USD&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;1,122.7 USD (2018)&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;1,094.3 USD (2016)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country_Gross Average Monthly Wages in 2020.csv' id='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F'>
            <properties context=''>
              <relation connection='textscan.1f1nmcr0h5pmcf1cbqlml08cs4bz' name='Country_Gross Average Monthly Wages in 2020.csv' table='[Country_Gross Average Monthly Wages in 2020#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F' table='[Extract].[Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F]' type='table' />
            </properties>
          </object>
          <object caption='europe.csv' id='europe.csv_621685D9A79A4B74A2706BD4DCA2175B'>
            <properties context=''>
              <relation connection='textscan.01agyii0a40go312v6gcq0ykpa2u' name='europe.csv' table='[europe#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='country_name' ordinal='1' />
                  <column datatype='string' name='Continent' ordinal='2' />
                  <column datatype='string' name='region' ordinal='3' />
                  <column datatype='string' name='local_name' ordinal='4' />
                  <column datatype='string' name='capital' ordinal='5' />
                  <column datatype='string' name='area' ordinal='6' />
                  <column datatype='integer' name='population' ordinal='7' />
                  <column datatype='real' name='population_per_sq_km' ordinal='8' />
                  <column datatype='real' name='male_life_expectancy' ordinal='9' />
                  <column datatype='real' name='female_life_expectancy' ordinal='10' />
                  <column datatype='real' name='birth_rate' ordinal='11' />
                  <column datatype='real' name='death_rate' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='europe.csv_621685D9A79A4B74A2706BD4DCA2175B' table='[Extract].[europe.csv_621685D9A79A4B74A2706BD4DCA2175B]' type='table' />
            </properties>
          </object>
          <object caption='population_by_education_level.csv' id='population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62'>
            <properties context=''>
              <relation connection='textscan.1vbotfz078oziw16ydtg41egi973' name='population_by_education_level.csv' table='[population_by_education_level#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='unit' ordinal='0' />
                  <column datatype='boolean' name='sex' ordinal='1' />
                  <column datatype='string' name='age' ordinal='2' />
                  <column datatype='string' name='isced11' ordinal='3' />
                  <column datatype='string' name='geography' ordinal='4' />
                  <column datatype='integer' name='date' ordinal='5' />
                  <column datatype='real' name='value' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62' table='[Extract].[population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[country_name]' />
            </expression>
            <first-end-point object-id='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F' />
            <second-end-point object-id='europe.csv_621685D9A79A4B74A2706BD4DCA2175B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[geography]' />
            </expression>
            <first-end-point object-id='Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F' />
            <second-end-point object-id='population_by_education_level.csv_11A0E4F8CE7F4538A6B233176D621A62' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_B781865D94814CA9A4FAF8CFD0B425CF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country Name' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Gross Average Monthly Wages by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Gross Average Monthly Wages in 2020' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0s5yb6718zh06m1by7vox1c8vvf0'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Albania *&quot;' value='Albania' />
                <alias key='&quot;Armenia *&quot;' value='Armenia' />
                <alias key='&quot;Austria *&quot;' value='Austria' />
                <alias key='&quot;Azerbaijan *&quot;' value='Azerbaijan' />
                <alias key='&quot;Belarus *&quot;' value='Belarus' />
                <alias key='&quot;Belgium *&quot;' value='Belgium' />
                <alias key='&quot;Bosnia and Herzegovina *&quot;' value='Bosnia and Herzegovina' />
                <alias key='&quot;Bulgaria *&quot;' value='Bulgaria' />
                <alias key='&quot;Canada *&quot;' value='Canada' />
                <alias key='&quot;Croatia *&quot;' value='Croatia' />
                <alias key='&quot;Cyprus *&quot;' value='Cyprus' />
                <alias key='&quot;Czech Republic *&quot;' value='Czech Republic' />
                <alias key='&quot;Denmark *&quot;' value='Denmark' />
                <alias key='&quot;Estonia *&quot;' value='Estonia' />
                <alias key='&quot;Finland *&quot;' value='Finland' />
                <alias key='&quot;France *&quot;' value='France' />
                <alias key='&quot;Georgia *&quot;' value='Georgia' />
                <alias key='&quot;Germany *&quot;' value='Germany' />
                <alias key='&quot;Greece *&quot;' value='Greece' />
                <alias key='&quot;Hungary *&quot;' value='Hungary' />
                <alias key='&quot;Iceland *&quot;' value='Iceland' />
                <alias key='&quot;Ireland *&quot;' value='Ireland' />
                <alias key='&quot;Israel *&quot;' value='Israel' />
                <alias key='&quot;Italy *&quot;' value='Italy' />
                <alias key='&quot;Kazakhstan *&quot;' value='Kazakhstan' />
                <alias key='&quot;Kyrgyzstan *&quot;' value='Kyrgyzstan' />
                <alias key='&quot;Latvia *&quot;' value='Latvia' />
                <alias key='&quot;Lithuania *&quot;' value='Lithuania' />
                <alias key='&quot;Luxembourg *&quot;' value='Luxembourg' />
                <alias key='&quot;Moldova *&quot;' value='Moldova' />
                <alias key='&quot;Montenegro *&quot;' value='Montenegro' />
                <alias key='&quot;Netherlands *&quot;' value='Netherlands' />
                <alias key='&quot;North Macedonia *&quot;' value='North Macedonia' />
                <alias key='&quot;Norway *&quot;' value='Norway' />
                <alias key='&quot;Poland *&quot;' value='Poland' />
                <alias key='&quot;Portugal *&quot;' value='Portugal' />
                <alias key='&quot;Romania *&quot;' value='Romania' />
                <alias key='&quot;Russia *&quot;' value='Russia' />
                <alias key='&quot;Serbia *&quot;' value='Serbia' />
                <alias key='&quot;Slovakia *&quot;' value='Slovakia' />
                <alias key='&quot;Slovenia *&quot;' value='Slovenia' />
                <alias key='&quot;Spain *&quot;' value='Spain' />
                <alias key='&quot;Sweden *&quot;' value='Sweden' />
                <alias key='&quot;Switzerland *&quot;' value='Switzerland' />
                <alias key='&quot;Tajikistan *&quot;' value='Tajikistan' />
                <alias key='&quot;Turkey *&quot;' value='Turkey' />
                <alias key='&quot;Turkmenistan *&quot;' value='Turkmenistan' />
                <alias key='&quot;Ukraine *&quot;' value='Ukraine' />
                <alias key='&quot;United Kingdom *&quot;' value='United Kingdom' />
                <alias key='&quot;United States *&quot;' value='United States' />
                <alias key='&quot;Uzbekistan *&quot;' value='Uzbekistan' />
              </aliases>
            </column>
            <column datatype='string' name='[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4)]' derivation='None' name='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Exclusions (Country,Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;1,392.9 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;2,286.1 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;4,061.7 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;1,623.8 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;5,862.5 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;3,351.7 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;2,658.8 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;5,247.5 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;1,122.7 USD (2018)&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;4,063.5 USD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey *&quot;' />
                  <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;1,094.3 USD (2016)&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;142.6 USD (2015)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;246.9 USD (2019)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;265.1 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;363.5 USD (2019)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;388.0 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;394.5 USD (2016)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;400.8 USD (2019)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;411.6 USD (2019)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;416.1 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;430.0 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;512.8 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;514.9 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;749.6 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;804.4 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;808.1 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;859.6 USD&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;865.3 USD (2019)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='&quot;935.8 USD (2013)&quot;' />
                <groupfilter function='member' level='[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1,138.9 USD&quot;</bucket>
              <bucket>&quot;1,302.6 USD&quot;</bucket>
              <bucket>&quot;1,342.8 USD&quot;</bucket>
              <bucket>&quot;1,450.6 USD&quot;</bucket>
              <bucket>&quot;1,572.4 USD&quot;</bucket>
              <bucket>&quot;1,628.2 USD&quot;</bucket>
              <bucket>&quot;1,650.2 USD&quot;</bucket>
              <bucket>&quot;1,757.8 USD&quot;</bucket>
              <bucket>&quot;2,494.7 USD&quot;</bucket>
              <bucket>&quot;2,520.2 USD&quot;</bucket>
              <bucket>&quot;3,616.2 USD&quot;</bucket>
              <bucket>&quot;3,952.7 USD&quot;</bucket>
              <bucket>&quot;4,045.0 USD&quot;</bucket>
              <bucket>&quot;4,253.5 USD&quot;</bucket>
              <bucket>&quot;4,352.7 USD&quot;</bucket>
              <bucket>&quot;4,489.7 USD&quot;</bucket>
              <bucket>&quot;4,681.6 USD&quot;</bucket>
              <bucket>&quot;4,764.8 USD&quot;</bucket>
              <bucket>&quot;5,701.1 USD&quot;</bucket>
              <bucket>&quot;5,782.6 USD&quot;</bucket>
              <bucket>&quot;6,228.8 USD&quot;</bucket>
              <bucket>&quot;7,712.7 USD&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]</column>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Exclusions (Country,Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Longitude (generated)]' field-type='quantitative' max='4285544.2945100516' min='-2283753.8315965189' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Latitude (generated)]' field-type='quantitative' max='8444204.8707590885' min='4113489.3094181488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]' />
              <color column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' />
              <text column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]' />
              <geometry column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Book' />
                <format attr='font-size' value='7' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Latitude (generated)]</rows>
        <cols>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{20FA2D0C-9577-445E-9BD5-6F11C6EC0D25}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Population by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Gross Average Monthly Wages in 2020' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5yb6718zh06m1by7vox1c8vvf0'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Czechia&quot;' value='Czech Republic' />
              </aliases>
            </column>
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:population:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:population:qk]</rows>
        <cols>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{C956975B-3B0E-4D65-B603-D6CFA211B3F9}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Male and Female Life Expectancy by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Gross Average Monthly Wages in 2020' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5yb6718zh06m1by7vox1c8vvf0'>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Czechia&quot;' value='Czech Republic' />
              </aliases>
            </column>
            <column caption='Female Life Expectancy' datatype='real' name='[female_life_expectancy]' role='measure' type='quantitative' />
            <column caption='Male Life Expectancy' datatype='real' name='[male_life_expectancy]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[female_life_expectancy]' derivation='None' name='[none:female_life_expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_life_expectancy]' derivation='None' name='[none:male_life_expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:female_life_expectancy:qk]' field-type='quantitative' max='88.0' min='67.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:male_life_expectancy:qk]' field-type='quantitative' max='88.0' min='67.0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:female_life_expectancy:qk]' value='72' />
            <format attr='width' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:male_life_expectancy:qk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:female_life_expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:male_life_expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:female_life_expectancy:qk] + [federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:male_life_expectancy:qk])</rows>
        <cols>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{B8D77CCA-7696-4F87-B07D-3AFBE3EE1982}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Birth and Death Rates by Country (Per 1,000 People)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Gross Average Monthly Wages in 2020' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5yb6718zh06m1by7vox1c8vvf0'>
            <column caption='Birth Rate' datatype='real' name='[birth_rate]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Czechia&quot;' value='Czech Republic' />
              </aliases>
            </column>
            <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[birth_rate]' derivation='Sum' name='[sum:birth_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death_rate]' derivation='Sum' name='[sum:death_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:birth_rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:death_rate:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</column>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</rows>
        <cols>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C5B9FEB7-EB96-411F-8E64-9EB59B713754}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Population Change by Country (Birth Rate - Death Rate)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Country_Gross Average Monthly Wages in 2020' name='federated.0s5yb6718zh06m1by7vox1c8vvf0' />
          </datasources>
          <datasource-dependencies datasource='federated.0s5yb6718zh06m1by7vox1c8vvf0'>
            <column caption='popChange' datatype='real' name='[Calculation_602356453316616192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[birth_rate]-[death_rate]' />
            </column>
            <column caption='Birth Rate' datatype='real' name='[birth_rate]' role='measure' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;Czechia&quot;' value='Czech Republic' />
              </aliases>
            </column>
            <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_602356453316616192]' derivation='Sum' name='[sum:Calculation_602356453316616192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death_rate]' derivation='Sum' name='[sum:death_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Albania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Belarus&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Bulgaria&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Finland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Greece&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Iceland&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Liechtenstein&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Malta&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Moldova&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Montenegro&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Norway&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Romania&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Russia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Serbia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sweden&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Ukraine&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' scope='rows' value='Population Change' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' value='Population Change'>
              <formatted-text>
                <run>Population Change</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:death_rate:qk]' />
              <color column='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]</rows>
        <cols>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</cols>
      </table>
      <simple-id uuid='{01790265-0444-4FB8-AE48-481E3B1EB9C7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='32' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='98214' id='22' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
              <zone h='98214' id='19' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone h='98214' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
                  <zone h='98214' id='5' type-v2='layout-basic' w='99064' x='468' y='893'>
                    <zone h='51897' id='3' name='Sheet 1' w='37287' x='10807' y='893'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49107' id='13' name='Sheet 2' w='37803' x='48094' y='893'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='46317' id='14' name='Sheet 3' w='47626' x='468' y='52790'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='51897' id='16' name='Sheet 1' pane-specification-id='1' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' type-v2='color' w='10339' x='468' y='893'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='89843' id='29' name='Sheet 4' w='13635' x='85897' y='893'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49107' id='30' name='Sheet 6' w='37803' x='48094' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='8371' id='33' name='Sheet 6' pane-specification-id='0' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' type-v2='color' w='13635' x='85897' y='90736'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='40' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='280' h='51897' id='3' is-fixed='true' name='Sheet 1' w='37287' x='10807' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51897' id='16' name='Sheet 1' pane-specification-id='1' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' type-v2='color' w='10339' x='468' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='13' is-fixed='true' name='Sheet 2' w='37803' x='48094' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89843' id='29' is-fixed='true' name='Sheet 4' w='13635' x='85897' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='30' is-fixed='true' name='Sheet 6' w='37803' x='48094' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8371' id='33' name='Sheet 6' pane-specification-id='0' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' type-v2='color' w='13635' x='85897' y='90736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46317' id='14' is-fixed='true' name='Sheet 3' w='47626' x='468' y='52790'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DB87FB99-0652-4968-BCA7-4CD786A9DBC3}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[__tableau_internal_object_id__].[cnt:Country_Gross Average Monthly Wages in 2020.csv_E1924B1B163542009F76EB26E7AD987F:qk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A61D55D-1C2D-4975-8224-76DE392CAEFB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9228DC04-3AAD-4CDD-BA43-D522282F47FF}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA29DB60-279E-445D-9350-6431E1E04A6C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B57C989-79C3-48D4-A8CF-C61549937F41}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0s5yb6718zh06m1by7vox1c8vvf0].[sum:Calculation_602356453316616192:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Country:nk]</field>
            <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E31C023-49A9-4805-A083-839D3D02E047}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0s5yb6718zh06m1by7vox1c8vvf0].[none:Gross Average Monthly Wages in 2020 (US$, at current Exchange Rates)(4):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E39BFF76-69CB-4DFB-84E9-38C45D68C5C6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      xrK5ev4/pyyyF9UzZyUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AV9ve4qT6/8Bnz9hodAkY/oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3wU953//5zZXrW7qqhLgEBICEQHUw02xhAgrrEdxy25uMQpTuKUu+Th
      XPrvciWXy/dsxz12XBKMjUMxHUQVRRIgIaEuob7aXW2vM78/sNbIxk4AY1/QPv/xw6OZ2c8M
      85pPmffr/RZkWZZJkGAUIgiCIH7WjUiQ4LMkIYAEo5qEABKMahICSDCqSQggwagmIYAEo5qE
      ABKMahICSDCqSQggwagmIYAEo5qEABKMahICSDCqSQggwagmIYAEoxrlZ92ABJ8cUtTOjmef
      5sgggIjKmEzJghtZVpaJWiH8/SeKBek6dZgTvTbmLp+M5Uo1OE4bb/7qVeolGVGpJXX8bK5f
      Mp0si/by39CuGl57dYD5Dy0j+wJ/TvQAVxGS5Kbp2GGU45exbNkSZqQM8c4L73DaH2So+xiv
      Pvm/VDR7L3Ckg6Nvvs7buxvwRgE5wmBbHVU1Hfg+lZYPcHJXI7YZS1k8u4hI3V/57Ys76POG
      L/I8Ufqbd/PGU3+lZbjh/nb2bT2B4yOOSPQAVxkKjZ68klnMLJaJZfvYsekwjqhEaUoxN9yS
      i8qkR5ZiRCVQiDKxmIwg+Blob6UjlEcgFEarOncuWZaIRSKEZRlBoUSpELmIfuSiUKotjJ0y
      i9mpUUqzVfz6FzvY1T6HOybZkKUYsZiEjICoUKAQBUAmFo0iyYAgoFAoEYnidfbQesbJuECY
      iFZ57gGXZWLRCBFJBlGBQiEiCOeuJCGAqwwpGsJ+tpkmhZemvRV4Z0ynVKvC0bGX11/eQ+l9
      P6Wk7Xc8ssvEY2VO1u9vxpafQ/XGrQwoD7BnvZbPPf405YTob9jNU/+6jY66dsTZX+f3jy/F
      eEVbLyCIKoxjpzO/8HX2NQwRy49Q+c4feWVLFYMhDWOX3sM37pyHcvAwL/z6WY7Zg8QUyVzz
      wDe4K+skv/nXF2kYinHgwd2Uf/4xvjYHwv5mNv7+J/y/Q/X4sxbxyCNfYk5BEpAQwFVHyDPI
      oXX/S6tRRJOczaypYy480O09zrGC2/n2L79OmrqfrbJAU8a13Ll2BhbRw4kuEWPWVO78zq0U
      Obfy9W8c4gxLmfapXIWAIAq4PR4GW46ycbud6bc+QF64gTdfeZu9S6ayIimDuZ+/m3IRBo5v
      4I+7q7j3B6v5/k9jvP6yk+X/8lXKkoDuDSg0ycz5wuM8flcbf/ztJpq6+ihPCODqRGfNZO1D
      v+H2iVE83bv59x+tw1Q8njkf3NE8hbW3ziJNrfiIM6kwmGxYkrSogjp0EsSubNPfxzdI16Ca
      /LnJhHrbaR3yoms8hUeAogVTydEq6D99iG27WzGkmIn0ugkoJWQubG9XKK2kpZtQe9RoFCpk
      +f09EwK4WhFFlKKIHPbiDckf/pdOsmCJrwwpUCojuD0ewrEosc8sTYJMLDDIqZ2bORybwH3j
      zKjsmeQmB5m98h4WFxoJOXrxKAWa64/hzL6Vr989mbObfsvhUwIgIIoC0agbry9EzKT+m6s8
      CQFcZfgHz7L5F19lp0FGkEQsc1YzL1sLvR93lIXxUwvZ/dor/PDQX1j5zZ8z9tNq8Ht4nSf4
      w/cfZJ1GhWnMRFbetZKyDCOi6RoWlp1m/f/3OH9RqDClTebWh+4kc2Ixkaf+wI9bixhn6Cck
      TwAUJKVMZIx5K0//yzeoXPNV7pn88b8rJNKiXD3IchSvYxB/9Nz/C6ISjcGESadCjoUI+EOo
      9EkoY15cIQVWkxbxvdUQKRLA4/ERikroLSloYn4CUQUGkw5FLIjLGUafYkZ9RVoeZqjfRVCW
      EQQRpUaPyahDqRBBlogEvHh8QWIyiEotpiQjylgQ95CXqKBCo4KwoMFm0iHIMQJeN75gFKU+
      CbNWwjMUxZBsQiVF8HuDyBotOo0KhSAICQEkGLUk8gIlGPUkBJBgVJMQQIJRTUIACUY1iWXQ
      qxB/ZxV/fPo/+OsJD0pRiTmnnHu+9RiL83WIHxHMI0UjRGUBpVIRXxn6rJGlKJXPPMy/vtOH
      WqlEbc5hyd0Pcfei8RhUF353y1KMaDSKoFCj/DsiYBM9wFWIHAvjS57CPz3xJOv/8grfv17m
      1V+8SEPoo49p2/m//OQPb9I9FPn0Gvp3EBHUFN/5C9ave53/eewa6l/4IxW9Hx2j6j57ihd+
      +y9srHX/XedP9ABXOwoN+QuvIfelv3J2EAr1XTQ2NdM3FEbUmsmfNJmUaC/1DW30dgyxf89O
      sopnMn+cGVdvK2caO3HHVCQXlDKlwPbZvTFFJalTplCm20lbV4RYmo+uxhqa+/1IqLEVlFKS
      qaC5+gjNnf3Yj+zBEC5mdmkB2tggp2vqGAiAPi2fSeNyMOvOPfoJAVztSCH6axuwJ2WRYpDw
      DZzlzOlT9HhkIs5ODtRHue1aNX39DjyDYVqbzhBKnki5xc6h7VtpcAko8NG39zSqb36V0ivv
      jrkwcpSh9jbaZTNTrQqiQTcd9TXU9Uvg7aVxVw8Pf/sa7Gc7GHR6CXQ00WBLZeqENFq2r2NH
      h4RaDOM6dAL78s9zXXkukBDA1Ut/HW8//18ct6kJBpTMvPuLFCXJxNwqxEgI16AHT+9Zujsb
      4Mv3sWjBNJqaMvjinWvJTpJpPfwGWzceIJw/nmTVEGcO7+TgzZ+BAIJD1O97hp80mAkFJCyL
      bmBOrh4hFkSpFPE57PiGemk8Gqbru6uZvepm2n0B0pY/wJqyJAif5Ok/bqQhr5x8U4TuhjN4
      s2ZyTWlCAFc35kzKp0xDX7WeTazi0TkFGCJ97N1VwRl/BtfcsBhFxzbeePcCMZRyjHAghDF9
      GjM/fx05WuAWSMv/9C8DlY4xpbMoTzrDW1VKFs0oJVUjMHBqH7v3Oxn3uRsZK51isLH1wsdH
      XXiDuSy66Rammc5tMqYXYHrP9JOYBF+taC3kFs3hrn/+MauFLfzX8/sZ8PtxDIZQp2QxflwG
      qoAX/3u7a7R6/AP99DhceEJgTstCrejCEdCRO7aALGME16fjjxyJQk1S9mRu/NKD3DcLNryy
      gYYBHyG3C49kpWBCDlalRCB2LlhboVBCNEpfTzeD3iAxTRETxvXR0OAjrWAsualawqEYMem9
      0z/xxBNPfAaXleAKEvO76Bxwk5ZXTGFmNpPmlGHf+SdOiVOZNxFq3n2DdTvPoM3NwSSnUrZw
      IjnWJMIth/jTn17jqFzG2msmkaJzs/fNV3h93Rb2t0conzuHDMOneCGyjKOzFod5CtdMzCFv
      ShnWtq38pV7PwmtKCDRs4LX1B7GrTOgiFkqvKyffpEcbsbNj3Su83SQwo6SMqdOyaXz3Zf70
      2gZ2VHdhzp9EUZaFn//0Jz9JBMMlGLUkguESjHoSAkgwqkkIIMGo5iOXQYPBII2NjZ9mWxIk
      +NRJTIITjFoSk+AEo56EABKMahICSDCqubRYoOgAh9a/yusb+5j37Uf5fGkGyv8bHopRRywW
      4+jRo6xbtw6Xy8WKFStYuXIlavWHE5hEo1H27t3LgQMH+OIXv0heXh4+n4/NmzezY8cOsrOz
      uffee8nKyiIYDLJr1y42bdqEyWTiK1/5CoWFhZfdXlmW8fl8HDx4kBMnTnDDDTdQXFyMKIq4
      3W42btzI7t27ycvL4/777ycjI2PE8bW1tbz22mt0dXVhs9lYs2YNc+fORalUcvToUV544QW0
      Wi033XQTs2bNQqlUcvr0aZ555hmi0SirV69mwYIF8ftzCT2ATKSvg+N9AfTGDqpPdhG9hFRi
      jsYD/OH//Rt7my6Urvs96t7gq199irqLb+SooampidraWu6++25+9rOf4XK52Lt3Lx9c25Bl
      ma6uLpqamvD7/UQiEWKxGKdOncJut/P4449TWlrKO++8QzQa5cyZM7S1tfHoo4+ydOlSXn/9
      dSKRyzfLRCIRKioqGBgYIDc3N97OaDRKTU0NHo+H73//+xQVFfH222+PuA5JkvB6vdx+++38
      5je/4c4776S2tpbW1lb6+vrYuHEjDz30ELfddhvV1dW0t7fj9XpZt24dt99+O/fffz+1tbU0
      NTXFz3vxPYAco7/nLJJgYdnSuTx3tA5npIwxSgGfYwh/TI0l1YQKL91nPFiKMlD5XPT29jIU
      iCGqzWRmW+lpa6bzbDfKM3VYlflMyLLh7W8hoElD6XcQ0aWQnruYx34gUoBM2DdEf28PQ4Eo
      KPSk5eWRqk8Es3q9XsaMGUN+fj5Go5FFixZx6NAhAoEAer0eOPfw+/1+6urqyMrKQhAEBEEg
      Eolw9uxZZs6cSWFhIWlpaTz11FPY7XZ6enooLi6mqKiIgoICTp8+TW9vLzk5OZfVXrVazYoV
      K4hEIuzZsyeepjwYDNLX18fMmTMpKCggJSWFJ598ErfbTVLSuUS2oigye/ZsZFkmFoths9lI
      SUlBEARqa2uZOnUqJSUlhEIhenp6GBgYYGhoiKysLGbMmIEsy3R3d2O32+NivvgnKOqhp6OX
      iJDNuOkGsv/8DpX2W1iTE6Z+71Zqh3K48Z75pFDPy9/fxw1vPIDq8Lus31GFV9Sg1mRx3V1L
      6Ni/j/ozffT43qRlYAWPrZ3Grj98i0PWO5kg27FMX8712goe/6OeJ//7NhTdp9n1zjaaXGFi
      Qx60Sx7kO2uL0V7WP8c/PlarlePHj7N582YMBgNerxe73f4hAXR0dODz+Zg9ezb9/f3x7ZIk
      kZKSAoDBYMBsNjM0NIQsy6SmpiIIAmq1mjFjxuBwOC5bAB+FJJ0Lz0xOTgbAaDRiMpnweDxx
      AQxz8uRJWlpacDgc5ObmkpmZyenTp+NtU6vVJCUlEQ6HCQQC5ObmIornBjs2mw2Px0PsvejR
      ixZAxDtEW3cPYs48krNTmZXzB45U21mTY77wATEfPWfP4lfns3jFQsanJ5GUns3EL9yFfdMu
      Jq18jKUTTMTCAaRIGG9IzfTb7qE014KqpuK9kwio9GbSs/IIGQP4wgd4d2cN7oQAyM3NZe7c
      udTU1NDT04MoisiyHH+zAgQCAU6dOkVpaSlWq/VD5zh/3+G36wfPMSyWK8nf+5tOp5OBgQF0
      Oh1arZZo9FwuyAsdK0nSiO3AiHNepAAkPK52ag8f4XSNi/5KHQPN3fRGKxn43LILH6KyUnrN
      InxiNU1732aXS8GKB79DyQV2FTUmCibPoSzfwoik3UE3LUcPUNkWY0JJHtmxJraelrmy/xz/
      GCiVSkpLSyktLUWSJKqrq6mpqYm//QFOnz7NunXrOHr0KAAdHR3U1tbywAMPIIoiDoeDvLw8
      AoEAfr8fi8VCZ2cng4ODyLJMNBplcHCQWbNmXbHrEMVzVVucTic5OTn4/X4CgQBm84dfrAsX
      LmT+/Pn09PRw4MABkpKS0Gq19PT0UF5eTiQSwefzkZKSglKppL6+Pi6IoaEhtFotCsW5J+zi
      BCBFGepsImi5lnu/fAM5SsA9nt/9upLawWWYCOL1egn5PHSerqFNkiEUIiqYmLBkNbMkJ+/+
      7nvsrHMxuUBBNBDC5fYSjupRAIJCRKvT8qGM9ZEA/b0DMGYRi5cWM/jWvitWqucfjWDw3D03
      mUy4XC42b97MkiVL0Gg08X3Gjx/Pj370I+Bcb7Bjxw6mTZtGZmYm/f39VFVVkZubS01NDXBu
      GJKcnExVVRVFRUWcPXuWgYEB0tPTr9h1qNVqrFYr1dXVZGdnc+zYMZRKJSaTKb5PIBCgpqYm
      PkeQZZnBwUFCoRBFRUW89NJLTJkyBa/XS2dnJ+PGjSM9PZ1NmzbR2NiIRqOhsbGR+fPno1Re
      gileisXo7+pCP38NS8pK0AiAlMbSkt3U1Ue5qTCDoW3P89g/vcOMW2aQZ9ahFKL0nd7F83/Z
      TZdLRps1n+/OtmJRFjI938Tzv3mE16d8id8/vBSN3ozu/HwvSi1JRg2iwcaEsnFUPP1fPHqg
      iBWTREzGT6CC4FVAJBJhw4YNbN++HYVCwZ133snMmTOJRqNs2LCB9PR05syZQ0nJuT7X5/PR
      2NjIuHHjMJvNTJkyhcbGRh555BHy8vJ48MEH0Wg0FBcX09zczHe+8x0sFgsPPfTQCFFdKn6/
      n2eeeYZdu3ady98jCBgMBn76058ydepUGhsbefjhhykoKODhhx9GEARqamqor6/n2muvZWho
      iB//+McMDAxgs9lYvXo1xcXF6HQ65s+fz/e+9z30ej1f+MIXKCwsRKVSsWLFCn79618jSRI3
      3XQTRUVF8WFRIhYowaglEQuUYNSTEECCUU1CAAlGNR85CZYkiVDoY5JJJkhwFfCxq0CJ+XGC
      q53EECjBqCYhgASjmoQAEoxqLj4WqP80m19+nVMuABGNJYv5a25n0diPCIbz9XH40HE8qWUs
      LMu6QnVmRy+SJFFbW8vOnTtxu93Mnz+f+fPno1KpRuzT1tbGX//6V9xuN9OnT2fhwoXo9XoC
      gQD79++nsrKStLQ01qxZQ2pqKuFwmCNHjrBv3z4MBgOf//znyc7Ovuz2yrJMIBDgxIkTNDY2
      cs0115Cfn48gCIRCIU6fPk11dTVz586lqKgoHsU5TDQapaKigoqKCsaMGcP1119Pbm4ugiBQ
      V1fHhg0b0Gg0XHvttZSWlqJQKGhtbWX9+vVEo1EWL15MeXl5/P5cdA8Q8vXT7whSct3d3H33
      F7g+s59XntxM+0cdEPbR1dJIS5+H2Mect/rV7/PEmw0X25xRT0dHBzU1NUyfPp2bbrqJtra2
      eNDbMF6vl23btjF58mTWrl1LT08PJ0+eJBaL0djYSHNzM9dddx0Gg4Ft27bFBVNXV8eiRYvI
      zs5mw4YN8RDiyyESiXDw4EGam5tRKpUEAgHg3IN9/Phx6urqUKlUBIPBCy7CNDQ0UF1dzerV
      q7HZbBw8eBC3243L5WLTpk3Mnz+f0tJSjh49Snd3N6FQiA0bNjB58mRmz55NVVUVHR0dl2GI
      AVQ6E5l54xmXEyMsFmPY3IcfkKUIQb+fQCiKLCoxmMwfCleWokE8Hh9RSUAUFah1OrQaNRNW
      fIOvKVNAiuAPRRCVGrQqBVLYhyeqJkkrEPQHCcdixGJRJBRotGqkUJCILKDVG9FpVB9ZA+tq
      xel0MmbMGMrLy9Hr9eh0Oo4fP04wGESrPXf3fT4fOp2OefPmoVarMRgMHDp0iJKSEtra2igv
      L2fGjBkUFRXx4osvMjg4GA8mmz17NqFQiGeffZb+/n7GjBlzWe1VqVQsWrSIaDTKwYMH34/K
      VCqZNWsWM2fOZP/+/fHt5xOLxTh+/DhLly5l8uTJZGZmsm/fPvr6+ujv72fcuHHMmzePUCjE
      tm3b6OvrY2hoCLPZzJIlS+J2zL6+PnJzL6M+QNjnpLW+GmOfhzMVR7GuuoOxUgRnWxWbNmzi
      eMsgUYWJWbd8jVsnnXeg5KVp5+s8v7EKr6BGHVORu3gNt6+cR+sfH+Pdsf/BE7Oc/GXrMdJK
      l3NDWRreymf5XuMinrzNxOan3qB6KEgs5mag10327MWYe05Q2+6maNVX+PKN5Vi0o2taYzQa
      qaqqQhRFLBYLdrsdh8OB3++PC0Cr1eJyuaioqCA5ORmXy0VnZyehUAhJksjIyEAURcxmMxaL
      JW6ISU9PRxRFdDodOTk5OByOyxaAIAjxSMzz4/Q/avv5RKNRRFEkPT0dQRAwmUwYjUZCoRAe
      j4f8/HxEUUSr1WK1WuOGmPz8/Pi509PT8Xq9l26IAQg4ummpeJcevYAyaSyTbQr8ATvV+3dT
      N5TMnKXTETsreOvFrcz79cL3Dxw8yguvNzLn8V+wanyYw6+9QbUnfBG/rCJj2lJuX1lO+5++
      zZPeHH79+M10b3+SV7vOEgiVjToBFBQU4Ha7OXToEH6/H71ejyzLI4YPSUlJLFu2jF27dsX3
      CQQC8f2Gx9mCIBCLxQiHw0iSNGL8Pbz9s2TYMHN+eyVJIhqNfqi9siwTiUSQJGlEbyJJEuFw
      +PKGQEk5Jcy9+3ssyI7i6drCL3+4jtTCL+JyOfHKagJeN0rrFNbeOAHT+Qf299JmmsgjE8wo
      cCCK4kVOQjQYzQbUKiUKpQqN2YZFp8Op16BUSB+udDIKUCqVTJ8+nenTpyPLMrW1tVRXV2Mw
      vJ/IXxRFJk2axKRJ57rjU6dOcfToUTQaDaIoMjQ0RE5ODqFQiHA4jMViobu7O94TxGIxPB7P
      Bd1knyYKhYJYLIbb7SY1NZVgMEg0GkWn06HT6RgYGADO9RTBYBCr1YooirS2tsbF7vP50Ov1
      cVFc3utSFBBCIfyRIFGVDovFSrKtkAUrb+XO229mQVnayFUfWzKZzhbqunxEQ0F8Pj8XDLYI
      BvEFQ4S8fdQ2dl1WE692wuEwTqeTcDiMw+GIpxQ5Py2KJEnY7XZCoRADAwMcPHiQgoICNBoN
      VquVU6dO4XK5qK6uJhaLYbVasVgsNDY24nA4qK+vp6+vj9TU1M/wSs+JPSsriwMHDuD3+2lq
      asLpdGKxWCgoKODEiRP09/dz9uxZurq6MBqN5OXl0draSkdHB729vbS0tGA0Gi/NEDPMQMNB
      fveD+3hOLSMKBibf9QjTM5IJz5lH86t/4effWk9MqaN49l3cd/N5Y8a0Ody94ij//c+P8GZq
      CuaoivQpHzi50Uaexsmrv/8xOzIns3ScNvG14mMIhUJs3LiRiooKBEHguuuuY/r06UiSxKZN
      m0hNTWXKlCns3r2brVu3IooiCxYsYMqUKajVaiZNmkR9fT3f/e53SU1N5a677kKn0zFu3Djq
      6+v54Q9/iMFg4I477hhhs7xUAoEAr7zyCvv27cPn86FUKjGbzXzrW9/i1KlTbNy4Ea/Xi0Kh
      QK/X881vfhOlUkljYyOLFy9mxowZNDc38+ijj5Kens7NN98cN/UXFRXxox/9CI1Gw4033kh+
      fj4ajYZZs2bxb//2b8iyzLXXXkthYeHfNsRIkkQwGPzAVhlZkohGIgynAhIEEYVShUIByDKx
      aJSYJCEjIIpKVEoBKRZDFhQoFG466+xEjRoEbyd7Nx9BUbaMtctK0MVCSIIalQixWJRoTAJB
      RCGChAK1AmJRCVkUUShE5GiYKErUShEpFiUmCygV4kdOoK5Whoco8UmdUhkfC8disfiY+fx9
      FAoFCoUCQRBGHD88ER2+hx/c/sE1+UttbzQaHbGkKggCKpUqPp4/H5VKFR/rDw9bLtTe4fnL
      8PHD7R0+Np4G5bztBoNBuEgBXC529j33LOuru4ipzYybcwNrr59Ntln1tw9NkOAT5jMQQIIE
      /3cwGAwJS2SC0c1HToKHM4IlSHA1k8gKkWDUksgKkWDUkxBAglFNQgAJRjWX8CVYJuLp4cTB
      Co409BJRJjNj5U3Mzb28r4Ste57ndMrN3FhyIWNNFHtLNXu276PTD4gqMiYs4IZlZVg+HDV7
      aQS6ObCtAcPMckrHnJ+cN0BzxRZaLfNZUpKK4jN6ZciyjMvloqamBofDwapVq+KLFHa7nd27
      d9PT08PkyZPjYc/DxGIxqqqqOH78OIFAgPT0dK699lpSU1MJhUIcPXqUmpoaUlJSWLp0KcnJ
      yUQiEU6cOMHRo0fR6XQsX778Q9VaLvU6gsEg9fX1tLW1MX369Hhac6/Xy+HDh6mvr0elUrFw
      4UKKi4tHHB+LxWhpaeHkyZMUFhYyderU+N+amprYvn07arU6bqhRKBR0dnaydetWYrEYs2fP
      ZtKkSZduiIn5Bzm+5Q3ePtyLbVwppYUGBvvdl3NPAOg69jYVzR9VLSbGUFctda12bIXlTCnJ
      oHPH8/yxovOTyxAdGqB691HODHo/cM4gncd3crjJiRT207jtTzz950rsn9Tv/p0MDg6ya9cu
      BgcHaWpqin/xDAQCVFRU4PP5GD9+PFVVVVRXV484NhqNxotblJWV4fV62blzJ5FIhKamJqqq
      qsjLy8PpdLJjxw4kSaK9vZ3KykoyMzORJOkTM8REo1EqKys5efIkAwMDuFwuZFkmHA5z9OhR
      Ojs7mTBhAmlpaWzcuBGfzzfi+OrqaioqKuJtHGZoaCieC1Wv13PgwAF6e3vjhhiDwYDNZuPA
      gQOcPXv2UqNBYzh6jlFxuI8pdzzGqqnJqIngD386r0VjWj7T5iyiJCVMnusEP9l9EvviHNI+
      lV8HlBqyZyxjdUxH0t/e+xMlKSkpbupwOp3x7X19ffj9/rhzy2azUV9fz5QpU+LJbFUqFYsX
      L46nBc/MzGT37t2EQiGampooKSlh4cKFDAwM8PLLL+N0OmlvbycnJ4fly5fj9/t5+umnGRwc
      JC3t8u62QqGgvLyckpISjh8/Hg9vUKlUlJeXM23aNEwmE5FIhGeffZZQKDQisnXChAnk5eXR
      19dHW1tbfHtdXR0pKSmsXLmSQCDAli1b6O7uxu12I0kSa9asQZZlNm7cSE9PT7zXucj06DHc
      rU3YxQmsnJSCRiEAGgxKH7Xrfsm/vFyFFPbh8kZZ9O3n+OclOg69+b+8sPEkHmUKc275J+6/
      cSoqx0nWP/sMm2u6iSXN5Mvfvx+1JNF++HWe2HKEE7165t/zIPetmI5VfaHYHgFRFBCQkaUI
      zsYKXnr+dfad6ceQM4s7v/YoS/W1/OczG+jzDdHf0UvMWMqt33yUlbm9vPj8McYtX841RTbO
      Hn6VPx/P5yt3JQEuqv/8Gzb8vJOIoZDVDzzGzbPP87SFvdRufYG3/At5/J5pOE+9y3PPruNw
      p4/ssmXc/8hXKb9CAZMqlQqr1UowGBwR7zScB99ms6FQKMjNzaWpqYlgMBgXwLBJxOFw0NXV
      xb59+5g5cyaCIBAOhykoKECpVJKeno7VasXlchGNRsnLy0OlUpGUlMTYsWMZGBi4bAEMG28i
      kciI2CJBEOKVYILBIHV1dRiNxg/VBzAajej1+njo8zCDg4MUFxejVqtRqVSkp6cTDocZGBhg
      woQJcXNQXl4efr///Zihi2q9LCNFJQSlDs35D6bKQMnNP2bdqiHqd/2ZV6qU3JOBDYYAACAA
      SURBVDQrBefpP/GXSi1rHvk2VvtR/rjhXWpm56Fa/3uOG2/l3/64hNSQn6BOR40gYMtbyNd/
      9BCDe5/jpdN12IcmY019PyW3f/Asp6oO41Z3seegk/mrp5PiaebVvx4kVHAdj67OpO/Qn3nr
      pe2UPpiBJBuY9Ln7+OncHBre+Q9e/tM2yr5diiTJSO91gbIsE5OGP4Uoybv2Yf75nzNp3Pi/
      vLrpHSZPunXkLZBi544frOLFl/ZivPGHvHFdIRH/ENJnMD8YNrTEoxvfe6g/mNXP4XDwwgsv
      YLfbmTVrFtnZ2fFguOG38HBAmc/nIxaLjQiMi0aj+P3+K3Ydw0Frg4ODHD9+HJ/Px9q1a+Nh
      y38LSZJGJAIYNt9LkoRarY5fhyRJ+P3+eJWYixOAIKK2GFEEerA7YhSmvj9VlKN+Oqt3saU6
      yIJVN1OcZuTsnjM0OsKkHtyLGhg3sQCLTqKpb5DJaxaSrVOBLgkNIAoCpowx2LRavJpzBpcP
      Oly8fa0c2/Eab55qIPfOX/KNeRlIZ9voHeymuSdI1NmESA4zS8egQga1EWuSDoVCxZiyiSRv
      a8PhLf2YCzRiTdajUutIL55ExvGjuD5iehO199GRXMrD5ZkoRSUqY/JF3cpPimFj+bBbKxgM
      olQqPxS6nJaWxne/+10CgQDHjh1jx44dfO5zn0MURTweD3DOWxCNRrHZbPT09OB2u+OVVQKB
      ADab7YpdhyzLOBwOjh49SlJSEgsWLLio8OvhHg7ed68lJSUhCELcBD88ATcajZdYIUZUYMsp
      Jc/0BvsrTlB4w2Qs2GkbVGMLn2LrrnrGzL6JeRMz0IigHZNFXpqKFffcz/R0FZ7eQWJGI06b
      meqaGvonT8caDhLSaP4uN1fapAUsvWklgco/se7kAY53jmOO0YjVlEpR4QruXzsDsxzE6fSh
      l1pAlpBiMnIsQGdNA0MphSTrgaAfXzhKJOSko6WbAPnv/UKMWExGCvnprDuNQ5GJ1cQFJ7yK
      JCvpQ8c5dsbO+BQd0aAXSZGE/vJrSFwUVqsVh8NBe3s7er2e48ePo9Vq410+EK+Ykp+fj1ar
      JTU1lf379wNgsViora0lNzeXM2fOEAqFsFqtmEwmGhsbmTBhAv39/XR1dV1RQ0wkEolXcZkx
      Y8ZFh+Hk5uayefNmpkyZgs/no6uri8zMTJKTk9m9ezfd3d0olUqam5uZOnXqpRpiRIxpJVy/
      ZjEbNr/Oz/e+hEJlomzNfRTUvcb6XZ2ktHVz+G2R0pu/xx3Fy1ky5hme/+kPeEWnxpI+k1v+
      aRWTV3yRulf/zC++9yoKQzFrv3Lzx6ZMGdEC3RhmrbqbqPQcbz39Aop/up2F1xTx2oZX+fGB
      V1HrbZTOWc2aGYDnDBue/jV7NSIKQwHX3bmYrCSJfKudDU/9iv1jxpKfKsSXPLWpQapf+m8O
      R0MIujEsuOlGxpo/QgBpU7j1ujbeeOd3fHsdpBXOYM0dd1B6hQTQ0dHBm2++SUtLC11dXZw4
      cYKJEydy8803U1xczIYNG3jppZcoKCjglltuAWD79u0kJyeTm5vLnj17eO6554hGoxgMBhYu
      XIjJZKK4uJj169fz4x//GIPBwOrVq9Hr9YwfP576+np++tOfolKpWL58OUaj8bKvIxgM8uab
      b3L48GEGBwfRarXYbDbuu+8+Kisrqa6uZsOGDQDodDoefvhhAoEAra2tzJs3j3379rFz506c
      Tid+v5+KigrWrl1LWVkZmZmZ/OxnP0OlUjF37lzy8/PR6/WUlJTwn//5nwCUl5dTUFDwvq/4
      4mOBZKRoCI/LidsXRhJUmFNSUAUGsHveL6Sst2WSalQQcA/icAeIygIqrZnkFDNqonidg7h8
      IWSFnuRUG6KvD586nVSjkojfxVBIwGwyoVaKgETY78EblDGYLWiUEA26sDtCGJJT0QsBhpwu
      PMEIiCqM5mQs3mr+/bm9pM5ZwsLxaWj1FlJSzGgEiYDbiWPIh6TQYjSqkSQNFrOId8hDwB8k
      FJNQas3Yki3olBJ+p52A0orNoCDodeGV9NgsOoSID6fdiScUQ6UzYUu2obtCpYtDoRAOh2PE
      2F6n05GcnIwkSfG/mc3meNfvdrtRKpVotVqGhobwer3Ishyvx6XRaJAkCbfbjcfjQa1Wk5yc
      jFKpRJZlPB4PQ0NDKJVKkpOTP5ESScNt9XrfX/IWRZHU1FR8Pt+Htqenp8czlQ+XTR32Kg/v
      Y7VaMRqN+P1+HA4HgiBgtVrR6/UIgkAwGMRutyPLMhaLBYPBMDxv+mg/wD88fdU8/WYNBUtu
      YMnE9Evzfia4qrm6BZAgwd8gEQ2aYNTzsRViPmhQTpDgauNjh8YJASS42kkMgRKMahICSDCq
      SQggwajmIpfHZQJDXdTsP8TZ94wpSWOKmTNzHCblZ6ulwNkadveZWT4tH/EqzA4nyzJer5fm
      5mbcbjfz5s2Lf84fGhqiurqawcFBCgsLKS0tvWAQmSRJ8TyZU6dOxWKxEIlEaGhooLm5maSk
      JKZNm4bZbCYajdLS0kJDQwMajYaZM2de8VigoaEhTpw4gd1uJy0tjWnTpl0wHmjYHFRdXU1O
      Tg6FhYWIokhXVxfHjh1DpVJRUlJCdnY2oijS39/P0aNHkSSJ4uJi8vLy4vfnIp9aGZ+jkQPb
      3qXFJSCHHZzc+ieef6uay7fEXB7e5r28uKOOq/WrxtDQEIcOHaKpqYnDhw/HU/2FQiEOHz5M
      Y2MjoVCIffv2UV9ff8FzuFwuDh06xJYtWxgcHESWZdra2ti/fz8+n4/a2lr279+PJEl0d3ez
      b98+hoaGaGlpiVeOuVIMO9OampqQJImGhgYOHjx4wX0lSaKqqoqtW7dSX1+PJEl4vV42bdqE
      0+mkp6eHffv2YbfbiUQivPvuu/T09GC329m7dy99fX2Xlx7dkJLLpOtv5ppMPwMNG/n337zO
      4TlTuS47MaK6Umi1WoqLi1EqlSNcUgMDAzgcDhYvXkxeXh6VlZXU1tZSVFQ0IqBsONhMpVKR
      l5eHKIpEIhGam5sZO3YsCxcupLe3l7feeou5c+fS3t5OWloay5Ytw+Px8Morr+B0OklOvjJR
      r6FQCLvdznXXXUdWVhZ9fX1s3LiRQCCATqcbse/AwACNjY1Mnz49HgLd2NiIWq3mtttuw+/3
      s2PHDrq7u/F4PHg8Hr74xS8iCALvvvsuXV1dpKenA5cogGFEpZ704pUsGLuOqno7y9KUVG15
      gz9t2E93JIlF93+fLy80U7d1E/urO3F4umloGyRv0cN848sT6dz4NruPtNLn6afLGaPsupVY
      mndS0RRg0o33cv/nZmFyH+Z3v3qek30BFOml3HzvXVxXls2x57/B0bR7KOzcRIttEUveS10v
      R3007H+LbY1mVnxhJWPNn5Rp+LNFq9WSnZ39IUOM1+vFZrORmpqKUqmksLAwXhtrWADDocYd
      HR1xJxacCxsOBoOUlZWh0WjIysrCbDbjdrsJhULk5ubGI0vz8vJwOBxXTAAAHo+H7u5uMjIy
      0Gq1eL1e3G73CAFIksSePXuYOnUqkUgk/jIYGBiguLgYnU6HRqOJG2L6+/spLCzEZDpXqSI3
      N5dwOBy3d17+K1vUodXE6O7rorVyFwdaFaz+xhP8/Hs30vPCr9jSGSPkc+KQs1jz9V/wzO/v
      Q9j+DiftEkGvm7B1Kg/86Lf8/t4iKo/2M/eRX/HLh5dgbz9Fv9OPUpnCsge+z7/++ifcM1Pm
      wL7D9A1F8Pe3cGz/boJTvsRXbl1IhhYIODix8yVe2xdl0W2rrpqH/+OQJAmlUhmPb1coFASD
      wXjxOTj39j958iTZ2dnk5eWNEJAkSfEgN4VCgSRJuFwuJElCq9XGMy8Pj7uvFCaTiQULFrBh
      wwYeeOABfvazn9HS0jKit5NlmRMnTqBWqykvLx9xHZFIJC6U4TZ7PB78fj9GozG+Dc4J7bJK
      JI0g5sQ1pCJ/hpnB/g5OHzpF49kmtCKoC7Mxyud+xmpLxWLSodCYeH9ao8JssWDUqVCp1ajN
      maTbtKgMRlTqc1UCnd2n2PJGJe6ojM/eiX/82HPjfKWO7KkrWX1NHmrAC9C6l5ftasZ97rsU
      mkbHcEyhUBAOh+NzgnA4jFqtHjF57O7uZv/+/cyfP5/Kykra29sxmUzxqMhhp1ckEkGWZWw2
      G/39/fHo0eGU5ldyEiyKIhMnTuTnP/85cO4hfeaZZ0b0OENDQ+zcuZPx48dz+PDhuH9h4sSJ
      KJVK3O5zM9HhKIbht/7wmH/4Osxm8yUaYj6AFBqiveptDgyWcntxKroaK7lTF7D8S7cyOUNL
      xD1IQAXNl/EbTRVvYS/6Nv962zhatv6B1zvPbRdEkaRk68gKNJPW8p1lYV7e9CaHCu5n8fjz
      05tcnSQlJeFwOOju7kav11NXV4dSqRwRuhwOh0lOTqauro5IJBI3h0yZMgWj0ciZM2fIzs6m
      vb2dQCBAUlISBoOB1tZWioqKcDgcnD17luXLl1+x6xjORj5s7zxy5Agmk2mEkMPhMBkZGbS1
      tSFJEr29vfH/pqenU1lZSWlpKX6/n97eXiZPnozFYuHQoUPY7XZEUaStrY0JEyZcXoWYobOn
      2fDCf3BYFyMaVTHni1+gPMNAMFxK5umNvP3Mf7PDoMOQksU1Nyy7rBuTUTSJ8KYNPBfMRT3U
      R0CT+bH7pxRfy9KeV9mzfStjzKspTtdyNSyK9vb2smvXLs6ePUtTUxN9fX0UFBSwZMkScnNz
      2bZtG5s3b0av17NixQpEUaSyspKkpCTGjRvH1772NeCciX79+vXMmzcvXmB6y5Yt/P73v0eW
      ZebOnYvRaKSgoIAzZ87w5JNPIkkSZWVlHzKof5JIksSZM2eoqKggHA4jCAIrV65EqVTS0dFB
      V1cXZWVl3HnnncC53qqyshKv18v06dOJRCLU1dXx1FNPIQgCY8eOJScnB6PRSE5ODs899xyi
      KJKVlUVubu7fNsR8VIWYcMBJ55lmHGFAUGGwjaEwLw2tQkCOhXD2d9HV6yAYFdAmpZKXPwac
      fQxFdKSOSUYjDtF+cgDzxDxERx+emJ60DBtKTwd1gzomjE1F9A7QOhhhTHoa2pidhoYuwioD
      Jp2IpDaTMyaNQPcp3MYJ5Cefe9OFHR3Uu3VMzksm7B2kp9+LKSMHm0F5VQjA5/PR3t4+Ykxs
      NpvJz8+P58jx+XykpaWRlZUFnOv6h+uAnV/1pb+/n6SkJHQ6HbFYjN7eXvr7+9Hr9fGyQpIk
      0d/fT29vLyqVioKCghHpST5pJEnC6XTS2dlJLBYjJSWFrKwsFApFfCUnLS0tvuozbOSJRqMk
      JycjCAJOp5O2tjYUCgXZ2dnx63a73bS2tgLEbZKiKCYKZCQY3SQKZCQY9SQEkGBU87EVYv7e
      pEQJEvyjkvAEJxi1JDzBCUY9CQEkGNUkBJBgVHPRhpiQb4CmE7X0n/eJwDpuJlNzLj9tXoKL
      R5ZlBgYGaGlpIRwOk5OTQ25ubjzWZXgfl8sVj53JzMwkNzcXlUpFNBqls7OTrq4uDAYDEyZM
      QK/XE4vF6O7upqOjA5VKRXFx8SfyJXg4Hqevr4/BwUFyc3OxWCzAuY90AwMD9PX1kZ2dHf/A
      dT7hcJjTp0/jcrmwWCwUFhbGg90GBgZoaGhAqVRSUFBAamoqoijidDrjvoH8/HwyMjIuNRZI
      xtN7greffQpH3nxy3rsf2UmlFxZANEj3mRqapRxmlWZyKYn1woO17DngpHjpfLIvrwrTVcng
      4CB79uyhq6sLQRCor69nyZIljB8/Pr5PMBhk+/btdHZ2olAoOHHiBEuXLqWoqIjOzk42btxI
      KBQiHA4zODjI0qVL6e3tZcuWLfHQ6K6uLtauXTsip/+lEIvFqKur4+TJk/T09LBs2TKmTJmC
      LMs0NTVRU1NDS0sLS5YswWq1jhByLBbjyJEjHDlyBEEQEEWRwcFB5s6diyzLvPPOO9jt5zK5
      trS0sHz5csxmM1u2bKGjoyN+f1auXHl5fgBz1gTmfekbLM77GztGA3RU7eLdyGKmXKIABFGN
      Tq/lM3Zc/p/l7NmzqNVq7r77bpKSkjh8+DCnTp0iPz8/Hjbgdrux2+3ce++9mEwmjhw5Ql1d
      HXl5eTQ0NJCXl8eyZcvo6Ohg48aNzJo1i+bmZiwWC3fccQdOp5NXXnmFoaEhrFbrZbVXEARM
      JhPTpk2jvb19hGnHYDAwZcoUzGbziOzWwwzXFlu1ahUFBQW0tbVRVVXFwMAATqeTUCjEgw8+
      iN/vZ+vWrXR2dmKxWOju7uaBBx5AFEU2btxIR0dHPNP1J7TQLxMa6mLfWy/w18OdRNQZLLr3
      a5Q2/w+//XMlg3INjx3cxZpH7+b6iSq2/89/826jE01mOatv+TxzilIY2P07/qvWSon3JEfO
      xph4/Re447pp6N3t1BwJkrs0TFfVTt58awun+wIY0qdx80P3MifjU85H/n+M8xPjCoKAzWaj
      oaGBQCAwomCEy+WKR3qmp6dz7NgxgsEgXq+XyZMno9frGTt2LAaDIb5vQUEBRqMRg8FAbm4u
      drv9sgWgUCgoLCyMR6Wev324bNH5289nOMbf4/EgCAJms5lYLIbT6aS7u5vS0lLMZjMGg4HM
      zEyCwSA9PT2MGzcuHlZdUFBAMBi8xAox79FXu5e/PvJ5fvve/V3+vedZoTpMzZk0bvnOl8iJ
      9uNU6SlcdC/32GF7ZC4P3TqLdIueple/x/rAUr77wzLsB9/inbc2kvylW9H0NdHYO4/7vvwo
      0xq28PSx4/RMn0C+v4+mej9+ZCy2sSy7/WE+Z1DRtf0pXnztMMXfXPip1+v6v8SECRNobGzk
      Bz/4AT6fj8zMTMaMGUMgEIiP2W02G5MnT+aHP/whPp+PMWPGxI0zkiTFg9yGP3w6HA5isdgI
      I4lSqYwXoPis0Ol0XH/99Tz11FOcPXuWpKQkbDZb3CmXmXkuUlgURURRjBf4sFgs8bmEQqHA
      5XJdniEmvWQh37//Z+cNgWIMNCcjebey4bUQ06ZMo3wGqA0WLEYd2oiF1HQbRjo4vs/Nku+u
      ZkIWTJgzkz31x2lxDFEkCOiyxlGcn82QOwWNagBJOu8bXTSCp/04b6zbxpl+HyG/B8PMxYz2
      3HUGg4Hbb7+d22+/HVmWaWxsZN++fSNy+atUKlatWsWqVasAaG5uZuvWrXFDzLB7LBaLxVOL
      DxffGzaSyLJ82W//y0UQBCZNmsRvf/tb4Nz8Z+fOnVgsFtxudzy1uiRJyLKMyWRCluV4AgA4
      Nwk/3xDzyYysZYGkjMl84bHHuHlWJme3Pckv/3KcmAyCICOFQkSiErKsJckCvV19hKQoQy4n
      IVlEr1b97ZBlVxt79zViu/7r/O+Lz/KLu8o/kab/ozPs643FYgQCAWpqauK5/4eRZTleGM7n
      81FdXU1GRgYqlQq9Xh8vqtfW1obH4yEpKQmNRkNbWxuBQCBekfFK+oH/XgKBAJFIJG7o9/v9
      WK1W0tPTqa2txefz4XA46OnpiXuDm5qacLlcuN1u2traUKvVl+cI8/a1sHP9C7SdW71izPQV
      TNPWs2d3M2GViMqaRrJZDUo11ox0OLaDV170sPCGuZR/fj4HNzzPiy0pBOz9mAtmMSHNzN8M
      vNaaSEtRc6RmB+v8Tehahy6l6VcdgUCAyspKOjs7CQaDhEIhbrnlFgRB4MSJE5hMJrKysqis
      rIw/0NFolFWrVqHRaCgqKmLLli10dnbi8/koKSkhKSmJwsJCzpw5w0svvRSfD3wSPUA4HKay
      spIzZ87Q0tKC2WymqqqKZcuW0d3dzYkTJ2hubkav11NdXc2yZcviuX0mTJhAa2srx44dIxQK
      4fP5mDZtGqmpqSQlJXHkyBFefPFFJEnCarWSk5ODxWLBZrPx8ssvo1Ao0Gg0I5aJFU888cQT
      F3MBolKLwWTFaNDGMwZYM8eSm6xFCoeQRBW2/Kksu2YqqWYdhuQ00kxqRKWZMXmZ5I6fTJ4+
      RgQNqYVTWDhvGllWHSq9hTE5hRSk6hFVOmxpWRRkpqI3mLBl5pA/Lo/sFCsGpYjamEFxWRlF
      48dRMMY86otfBINBwuEwFouFhQsXkpWVFa/wotPpMJlMhMNhgsEgNpuNOXPmkJubi1KpxGQy
      YbFYiMVijB07ltmzZ6NWqzEYDFitVmKxGNnZ2SxYsOBD6UkuhWHjSzgcjptT9Ho9ubm58Yc6
      MzOT1NRUdDodeXl5KBQKIpEINpsNURTxer1otVpKS0vj9ZDVanV84puWlsbMmTNJS0tDqVSS
      lZVFJBLBarUyc+ZMMjMzEUWRn/zkJz9JBMMlGLUkguESjHoSAkgwqvnI4bMsy/G10gQJrlY+
      VgDD1ccTJLhaSQyBEoxqEgJIMKpJCCDBqOai/QDRkJf+rm48keFtBrLGZWJUJLR0JZFlmUgk
      gsvlIhQKkZWVFY/ND4VC9Pf3EwgEsFgspKSkjIjbHw6F6O/vJxqNxoPIhrNBOxwOXC5XPHRA
      rVbHTTQOhwOFQkFGRsYn8iHs464vHA4zMDCA3+/HYDCMyAQ3TDQapbe3F7/fj16vJyUlBY1G
      E48U7evrQxRFUlJSMJlMCIIQzxUqyzLJycmYzeb4/bloAbi6j/LSr/4fnZYSUvUA47n9B7dR
      nBDAFSUQCFBbW0tdXR1tbW08/vjj6HQ6otEo1dXV7NmzB5/PR0pKCmvWrCE3Nzd+bDgcZu/e
      vRw/fpxYLEZaWhrLly8nLy+Pnp4eNm7cGE+Yu3TpUubMmYPdbmfz5s20trYiyzLz589n6dKl
      l22I+SiGr6OiogKfz4fRaOTaa6+lvPz9mC9Jkqirq2Pbtm14vV5MJhPz5s2L77NlyxZOnTqF
      KIpMnjyZpUuXYjQa2bVrF0eOHEGWZYqKirjhhhvima4vKYrAmlfGNXf/iAW5f3vfBJ8M0WgU
      URSZN28e53+8HxwcpKmpiRtuuIGioiJ27tzJsWPHyMzMjIc3u91uOjs7+cpXvoLFYuHgwYPU
      1taSkZFBQ0MD6enp3HXXXbS0tLBnzx7Kyspobm5Gp9PxrW99C7vdzvr165k9e/YVS5AbCARo
      bm5m5cqVjB8/nqamJvbt20dJSUncNBMMBqmqquLGG2+kqKiI5uZmTp06RW5uLm63m4GBAb75
      zW/i9/vjiYStViuNjY08+OCDKBQK3n33Xdrb2+M2zE8mjCYapKNqF0dcNrKENhrC41i9OJua
      N97gSK8HSZXC5IXLWFBeSOTEn3mx0UhRsIna3ii5M5exfF4JSaoAp3e+xfbj7QS1+Sy8cRnT
      c///9s48Oo7qzvef6urqTS21Wi11S2pJrZYsIdnasLyBjQ0YDAYDNjzCMiaBzBky5ATOY/KI
      X4ZkziFnSHJmCS95M2feJDMBwmLGQDAYL9h4l7FkI9sykmVJtmTtS6u71a1e1Fv1+8NRxUpY
      YmxPEqs/f5bqVtfVub+qe2/9vr9vgoZNb3GkP0RaYRUrb7mJyjzDVVHs9mLJyMigvr5eKSE+
      zbRKq7CwEK1WS3V1NR999BGRSEQJAFmWlZRnURSVatJTU1P4/X4qKysxGo1UVFTQ1NTExMQE
      gUAAp9NJRkYGRqOR/Px8xsfHr1gAJJNJIpGIkpKdn59POBzG7/eTnZ2tnDfdD0EQZhTFHR4e
      prq6GrPZTHp6Onl5eQSDQUKhEE6nE5vNRjKZpLi4mHA4fGl6gPGuI/z7c0/wugaw3ciz374N
      b88R3toncOuNC7h2kQODMEWacxG31hsInTvG7qYG7Hk5WPqP0dBWxfL7VmDqPsz7xz9mXnkx
      8d7X+cXOKVbdv5p8QU16RoyWX79Np2k+d9Ro6PukmUN7D5O5diX5KW2wQjweR6fTKXNlrVZL
      LBZT5tEAmZmZFBUV8aMf/UhJKovH40QiEWRZVrQDkiQhiiIejwdZlsnIyEAQBCWL0uPxUFJS
      ckX6YTAYKCsr47XXXsPv92M2mxWLpOkA0Ol0LFq0SPErS0tLQ6fTKUlw0zpfURSRJEkx+JgO
      FEEQ0Gg0eDyeS1OEZZXUsf6+b7PEDqg0pGtk3LJIjmMuK1bfitOoRogOMXTkLd79ZIBgMMRE
      3g3cOnX+R3W55dRVVxOQhtjVN0gsHqa96SBFd/wLqxaYEEmSjLWz5+DH7Bg9xH6NQCIaIf86
      M8vDQCoAFFQqFbIsKw6O05ZHF+oBNBoNd955JzfffDPJZFLxGtDpdIpZ3nRblUpFeno6o6Oj
      RKNRZboliuIMkc3lRq1Ws2TJEmpra0kkEsRiMV555RVMpt/q/VQqFbW1tZSVlZFIJJicnKSx
      sRGj0cjExITy4Xb6ntPS0kgkEgSDQeXYb8qiX5oeQCVqSEvP5DfTKIgGQNJhsuaTky6hArwN
      L/Oqdwk//fndaLs+5P9+2Ku0F1Qiokq4oOSFgFqSiAQDRJMZ6JIyclJErc7nnv/9FOsX5KGW
      Y0TjIM723OffwWAw4Ha7cbvdGAwG+vr6SCQSnyoqT09PJxaLce7cOWw2G5IkodFoOHfuHAUF
      BYyNjeHz+TCZTEiSRF9fH+Xl5QSDQXp6eli6dOkV7UsymVR2mk6dOoUkSYrN0TSJREJxjRkY
      GCAWi2EymQiHw5w+fZqqqirC4TBjY2OUlpZiNBo5efIk119/PQB9fX2K7wBcNlH876PKtJKV
      GOT4wYMIY524Jj9v90CiYukqtr21kXeoJkdMI7/KSd2NZn713lts9VSSRgzJUkJVZQXZV86n
      4U8Wn89HR0cHbrebs2fPsm/fPmw2m1IX5+DBg2RlZdHX16eYaPf09KDX67FYLLS0tODxeAgE
      AgwPD3P77bej0+koKSlh//79+P1+xsbGcDqdmEwmHA4Hu3fvZtu2bfh8PnJycq6oR1gikaCn
      p4fu7m4SiQQdHR0sW7YMSZKUbVq73U5/fz/d3d1KPaOysjKsVismk4kjmD+zAwAAGkZJREFU
      R46wZcsW4vE4iUSCvLw8srKykCSJ9957D7VaTSAQYOHChV8siJkuYPRpSDoT+Y5iMi98yAgq
      jDmFFOeZUAO67DwyJocZ8sfJzC2meE4p5Y58THo1GouTufbzkS0asiguyCPHUYHTGGSwbxhf
      XEduYTFza6rIkj0MDY4zGRXJsjsotGaiudqNvz6FyclJOjo6GBkZwWQyEQgEUKlUOBwO7HY7
      Xq+X8fFx6urqqK2tBaC/vx+VSoXJZGJ8fJzu7m6SySRLliyhtLQUtVpNRkYGarWagYEBbDYb
      y5cvR6fTkZaWhlarZXBwkPT0dGVL8UoxLeA5e/YsgUCAmpoarr32WkXE7na7sVgsxGIxOjs7
      8fv9lJWVsXDhQsUaNScnh56eHiRJYvHixdjtdtRqNXl5efT19SHLMosWLVIUYT/84Q8/WxCT
      cohJcbWTcohJMetJBUCKWc3nLoKv1GfvFCn+VEiJ4lPMWlKi+BSznlQApJjVpAIgxazmS3wJ
      TpKUE0SnppiKxpEBSaNHr9cizsY0zT8y00KZcDhMMplEq9Wi0+lmOKtMZ1pOJ7+p1Wr0ej2i
      KM74myiKGAyGGUKb6exTg8FwWWxzpwvtTtf31Gq1M64bjUaJRqPodDrUavXvOcTIsqzUOVWr
      1eh0OkRRRBAEotEooVAIQRDQ6/VIkoQgCEpyIJxPqNNoNMp1L7pHyUQUV2cjW7Zs5+MzLiJI
      OOYu595HHqb6j187ddYRDAbZs2cPu3fvJhQKsWDBAtatW4fValXOicVibN68mYMHDzI1NYXZ
      bOb+++9nwYIFuFwu3nzzTVpaWjCZTDz00EPMnz8fr9fLu+++S1NTE5Ik8ZWvfIUbbrjh9wbk
      xZJMJhkYGKChoYFTp06xdu1a5s+fD8DIyAiNjY00NTVx9913s2TJkhkOMbIs09XVxWuvvcbQ
      0BD5+fncdddd1NXVAbB161a2b9+OJEmsXLmSVatWodfr2bt3L5s3b0aWZZYtW8aaNWuUJLuL
      DACZ0Hg7O97airv4br73zcXk6yL0nzqMO3xJ/5cUX5Kenh6CwSAbNmwgOzubnTt30tTUxB13
      3KEMHkEQqK6uZvXq1RiNRpqammhubqaqqoq2tjYsFgv//M//zOnTpzl48CCVlZV0dnaiUqn4
      4Q9/yMjICJs3b2b+/PmXnA6RSCQYHR3FbreTkZGhJL/Jssz4+DgWi4Vly5YpqdwXEolEOHDg
      AOvWraO6upr29nZaW1ux2+0Eg0HOnDnD3//93xMMBtm9eze9vb1kZ2fT3NzMhg0bkCSJrVu3
      0t3draSLXFwAJBO4e1voctu48/El2I1qQKKo5laKABJBek82cfh4F96Egcrla1h+jY6h1k/o
      D2gxyiOcGM7k9lvz6Np7gNGkEZ9rHFVBJbXpE5xsH0C2zGHJDddzTU6cjv37aOwcJIyegooF
      XL94HtrBRrZ0RXDEhmgbDJLhqGHZddcQOL6PM8aF3D4/j2TQRUtrB6q8Kmoc5qt6oRONRhFF
      EY1Gg1qtpry8nMOHDxMOh2fk+c+bN49kMonP58Pr9ZKXl6fogaurqzGZTNTW1nLkyBG8Xi8+
      n4/y8nKysrIwmUzk5ubicrkuOQAkSWLhwoXEYjH279+vHFer1dTU1ACwZ8+eT20ryzLRaFTx
      NcjPz6ezsxOPx8PQ0BB1dXVYrVZisRh2u53JyUmCwSAlJSUUFRWRTCYpLS0lEAh8SUGMLBP1
      ThI32MmxqBlsfIONu07iTxq56WvfYV7oOIePnUGVU0QxQzT86hXS/+YR4qcaee/DPrKvW0j5
      nGISgQEaP9wJ13+NqswBtvx6O5E7r6fYmk5z8x72phdRfJOJYEKHrdBJbNJF2+FtYM5lsfso
      b38wxeO312EzBTnauBOtLY957k94bU+C66+9B3mkg+bGRpx3XP0eAkVFRbS2tvLTn/5UcXuR
      JIlQKDRjsLrdbv7rv/6LkZERysvLufnmmxUtwfR0YLrK8rQgZtpZZbqKtNvtxul0/rG6qlSE
      3rhxI9FoFK1WSyKRID8/n1AoRHFxMYCyNggGg8iyjNVqVQQxBoMBr9f75QUxggqSiQixOORf
      cwPrsuy8+w//SI87QEZvI9vf3EvQnImWEBM+Fc7RR5hDDMwlXH/jbSxwmAiNHEabZqZ4/gpu
      seg58v5ubPMXs9IcITHWy3FvgBjZCJ4Otu88issXwK3OJXtx8PxNZBSw4Pob0fo7GR55G18Q
      ilfcwrz3N3KwfxXlgwNMCeWUO9Ku6qc/gMVi4a677sLtdhOPx/F4PLS2ts4QxMB5LcDq1avx
      er20t7dz6tQpFi9ejCAIipgmmUwiiiJ6vR5BEGaUxhRF8VM1Bv+diKKolHaf9kI4ceKEsqC/
      8H4FQVAC5MIKhyqVCq1Wqyz0L258qETSCgtJD3dy5owPyZRPSVkp2XoVkEROGJh3y9f4wU//
      jX//xSu88cYvubcMQE9uoZNCmwnpN78oqFSo1WpUgoAgqNHqJFSCgKgWgSSBk1v5l0MxHnr2
      H/nZj77Huvoskvzmo7Vai1ZSoRIEVKrfrOazFvLgajU7th2jt+8c6QuXUKC5+relBEHAZDIx
      Z84cysrKiMVipKWlKaIR+K1lkMPhoK6ujltuuYXW1lbC4TBqtZr+/n4SiQQejwev14vJZEIU
      RQYHB4nH4wQCgT8Zhxi1Wo3D4VD8jKfTvafF74lEglAoxPj4OBqNhqysLM6cOUM0GlXsXr+8
      Q4ygJjt/EYurm/ng16/CxCLsBi9jyUwKDUbySwuINR/m0KEcwsUm4kEv6WXnV/iCSgBBAP6w
      zIukWkKvk/EP9HEmcIb+8RCf+/IVREpW3Uva13/FvsULWH+vDdXVP/4JhUKcPXuWaDSK3+/n
      0KFDPPjgg4iiyOjoKBqNhng8zv79+7Hb7Wi1Wrq7u1Gr1aSlpVFaWsqBAweQZZnu7m7FtKKo
      qIjdu3cjSRIulwudTjdjZ+nLkkgkGBwcxOVyKZZM8Xic0tJSpa5PT0+PMg2bM2cOgiAQDAax
      WCz09/czPj5OIpGgpaVFMQU0m80cOnSI3bt3E4lE8Hq9LF68GKvVyocffsiOHTvQaDQMDw9T
      U1OjbL1evEOM1kjBnDJMU700HzlG6xkX1rrV3LhwDgU2G9lpUc62HONE6xm8ahtz55ZgSEQQ
      03MpLrahF0GOR5iaEsgtr8amj+DzqymqnYNVEpiaiqDJdjCvqgSLt4fDx04T1OXiKCnE4Sij
      0BjHJ+WysDwPVTJOKCqTY59DoUUPGiPDR17DXfEY99TnIH1xd/7sSSQStLW1cejQIUZGRrjz
      zjuprKxElmVaWlqIxWJYrVaGh4c5cuQI7e3tqNVq1qxZg8ViUeSETU1NpKenc+edd2IwGMjI
      yECWZZqampBlmXXr1l2WihCxWIyDBw9y4MAB/H4/o6OjdHd3U1paSmdnJzt37lTUaV1dXTid
      TsLhMN3d3VitVvx+P3v27KGzs5OSkhJuuukmRRxvsVg4cOAAgUCAFStW4HQ6kSSJ3NxcGhsb
      GRsbY+nSpZSXlyOK4tXlEBM428DmvU10j+pZ/fXHWZiXEg+n+HwEQRCumgCYGuuguX0YfWEt
      NSXmWe8bluKLuaoCIEWKi0UQBOFzDTJSpLja+dwASIniU1ztXO3fiVKk+FxSAZBiVpMKgBSz
      mlQApJjVXLQewH2ugc2bDlHx0HdZWggwwsbv/C+GbvsJ31556Z/KU1wckUiEgwcP8u677+L3
      +1m5ciXr1q2bUVR22u7o/fffZ9++fQA88sgj3HDDDfh8Pt555x0OHjyIzWbjscce45prrmFy
      cpJt27axa9cuDAYDX//616mrq7ssgpjx8XEaGhpoaWlh7dq11NTUKMlp01+fX3nlFdavX68U
      tZ3G6/Xy/e9/H7fbDUBlZSWPPvoodrudffv28frrr6PVarnnnntYsWIFWq2WpqYmXn75ZeLx
      OHfccQerVq1ScqUuXhGWTBCPxZEv2CWNx6LEEqlt0z8G3d3duFwuNmzYQE5ODtu3b+fQoUOs
      WrVKGVSJRIIjR44Qi8X4p3/6JzQaDYlEAlmWaWtrQ6vV8sILL9DW1sbu3bspLi6mq6uLSCTC
      j3/8YwYHB9m5cycVFRWX7BMWj8fp6OggLS2NRYsWzcgwTSaTjI2N0dfXN8Ph5kI8Hg/19fU8
      9thjM4739fVx7Ngxnn/+eQKBAPv376e3t5ecnBz279/PM888gyRJfPDBB5w9e5aqqirgMleH
      jvmH6R4LYsktJtuoxnOmiQF9DTXmAK1dg8TiU3jdbqZUJubU1lOeoyE41kvbqS7GAgl05hxy
      rYWUlWUy0dlOe/cQgbiKDFsp1bXlmKPDNHdNkJ+vo/90N1hL0YddGIuqcGbrwdvF/tMq6peU
      YpwFiXBw/g1gNBoxGo1IkkR1dTVHjx4lHA4rqqpoNEp/fz833XQTZrNZaTs1NYXb7aampgaz
      2Ux9fT0nT57E4/Hg8XgoKysjOzsbs9nM8ePHGRsbw+FwXNL9SpLEsmXLiMfjNDQ0/F5fTp8+
      jc1mY2pq6lPfNr/rGDPN2bNnqaurIzc3l1gsRkFBAX6/n2AwiNPpxOl0IsuyknR3SQYZ/uFO
      dmz8N1ozAIK0j8bIByJjZ2hoGuDa5flkG9UMHH2bXVYnNXP72LP9AxI5TgoyYLhtLycmMnlq
      pZ59W7fSNqklPyuDcOcRPspYyVMlVbjHxhj3TBBJxOk8eYxRzTe4P7OD9zY3kJFjxWrNokg/
      TuehnUSrMsi95Rr8R9/g7Y5buXZJ6Zfp1p8lNpuN1tZWXn31VURRVAwvfjcAPB4PjY2NfPjh
      hxiNRpYtW0ZOTg6yLCtBodPp0Ov1TExMkEwmMZvNiiAmMzMTr9d7yQHwWciyzPDwMJOTkyxY
      sIDR0dFPPW9iYoKPP/6YwcFBTCYTCxYsoKSkhHA4jN1uB1BE/+FwGFmWsdlsitON0WjE5/Nd
      mkWSxpBJYdk85mYDTOBuPvzFjcQ07NXXcVd9EYNSDz/rG2e410erR8XSu+/neqeRs++/wM+H
      z9+WhjBDvV2M+kMMj7oI93ohE5iaQl1Qy+231ZOtDtLiOsG+c+2M+NNp3e9n4SPVZMySpz+c
      D4CbbrqJ/v5+ZeD39vbOsBdNJpOoVCpycnIoKCjA7Xazc+dO1q1bp/x9mukB/3nHrwRTU1N0
      dnZSVFT0uWnXc+fOVVK8x8fH+eijj5QqGL97vxdOAX+3H1+6KgSAzmRl7oLlv3GJHKH3nVcZ
      /KJGKi16vQZRJaCWzv9sZCqMYEgjO92AKAjnNQPAVH8L7x3qIX/JGm7P03Nsxy85M905Qz5V
      tXOw6NQIQjrlcys4NHCGvo/3s0+/iA0lV87L9k8RlUqF3W7Hbrcjy7IyVblwrj6dy19VVUVe
      Xh6BQICXXnqJYDCISqXC5XJRVFREMBjE7/djMpkQBAGXy6WUMBkeHmbhwoVXrB+Dg4Ns3LiR
      SCSCRqPB5/Oh0+n4q7/6K1auXKmcZ7PZFMO7yclJ9u7di8vlQq/XMzAwQF1dHdFoFJ/Pp3ge
      nzx5UrGRcrvdGI3GK+MQI4giUz4Pw0P9DIR8HD7lhs/ZGMqy5iN6D9Hc1kHGNSbODXkASETD
      BBExp5vQJd24PEEUNYyoRlIJnLeKVKF3VFKnO8UHv27A/pW/I1uaRY9/zrsmjoyMoFar8fl8
      bN++nXvvvRdJkggGg4phXFFREXv37mXZsmUMDw+jVquxWCwUFhby8ccfYzAYaG9vJyMjA4vF
      gt1up6GhgaysLIaGhohGo4oJ3aUgy7IiVvf5fGg0GlwuFw6Hg5///OfKeW+99RZOp5NFixYp
      tYLUajU7duwgNzeXoqIi+vr6cLlcVFdX43A4+MUvfkFBQQHBYJCRkRGqqqqw2Wzs2rWLxsZG
      NBoNPT093Hzzzcrb7KIDQNKZsRcXY1IW7xpyy6pQZ2kw2JzU2VrY9taLNDuvY1l9PW6zBJp0
      CorsZKdpERDQZTsoj5pJL3Jy53VDbN71Cv9nVyY5hgRSgRaT8xpWlXXz/hu/oNlZz5y512LO
      MYDOTElxPpm6377eBcFMaZmOyZZybinNQJhlJqrJZJKWlhYaGxsRRZG1a9dSWVlJIpHg8OHD
      ZGVlUVtbS319PR6Ph3/9138lMzOT+++/n7S0NCoqKhgeHuall16ioKCABx54AFEUKSkpYXh4
      mDfeeAOTycTDDz98WaZA0WiUrVu3cuTIEeWYRqPhW9/61gxz7/z8fLKyshAEgXPnztHd3c3S
      pUtZunQpmzZtYtOmTWRnZ3PHHXfgcDgQRZHVq1ezadMm9Ho9a9asobCwEFEUueeee3j99deR
      ZZnbb78dp9OpTIH+uA4xkyMcbznJufEQQjzMYP8Athsf5b5rc/6wYRyd5Fz7xxxoOI43fwnr
      b1uExZBSAqT4w0hLS/vsdOj/FiQJnSQiRyPEkhoql9/Hgqo/cPADJJMk4gnSnItZtrCGTH1q
      8Ke4OFIeYSlmLSmPsBSzns98A6QUYSmudlQq1WevAS416SlFij8HUlOgFLOaVACkmNWkAiDF
      rOaiAyA42sVLP/s7NjUNXUSjbjb/7EXeO3aOS9tYHWTHT37GpqZB4vIlXejPjmQyydDQEL/8
      5S957rnnlC3qaYHJxo0b+e53v8vExMSntu3t7eUHP/gBDzzwAE8//TTt7e1KPs2rr77K+vXr
      +du//Vv6+vpIJpOEw2E2b97Mo48+ylNPPUVXV9cV72M0GmX//v1885vf5MEHH+TFF1/81POS
      ySTd3d08++yzbN++XUltbmxs5NFHH+WJJ57gwIEDyvHW1lb++q//mr/8y79kx44dRCIR5VoX
      /eVIjkXxukeIhmMX0SiKf9yDKhz7A0vjfhYx/K5xJkKXep0/P0ZHR9m3bx9lZWVEo1GlpPnE
      xAS7du2iqKgIv98/I/Nxmmg0yq5du1i9ejXPPPMMLS0tfPDBBzgcDlpaWgiFQvzkJz/h+PHj
      bN68mW984xucOnWK4eFhnn/+eXp7e3njjTf4zne+83tl1y8XsizzySef0NzczNNPP01hYSEe
      j+dTz41EIjQ0NGAwGJT+Dg0NsWPHDp577jkmJyc5cOAANpuNvLw83n77bZ588kl0Oh3btm3D
      brczb9484FKT4aIeutonyJyTgbdnCNFaSnF6lL5zvYxNhFEbrZSUl2C+sE0yibf3E86Mhogn
      RdKtRZQU5KATfXQfH0DOVDPp9iPrsiktL8KsEwmO99LdO0ooOc6AN8jsyvc8T25uLg8//LCS
      NjyN2WzmoYceAqCjo+NT22o0Gh577DHFFC83N5ecnBzi8TgjIyPU19djtVpZtmwZp06dwu12
      43K5qKysJD8/H6vVyvHjxxkdHZ2Rr3M5mS5dXltbS2lpqeIA87skk0laW1tJJBJKohxAe3s7
      9fX1OBwOotEoPT09eL1eAoEAxcXFVFZWkkwmKSsruzSDjBn4Wnn5+e3kPVQGI+BcbCAeamPv
      kU788QSJSJzc6x7mgcUXNopz7the9nVHSE75GY87WffovVxra+OV77+I8cHl6EbPcPqMyMon
      Huf2OWF2/uolTgQMGE0x+tyTXHNJNz37mBaDxONxuru7OX36NHPnzlUcYqYVVgaDQRGMJJNJ
      srOzEQQBSZKwWq14PJ4rFgDxeByv18vk5CTvvPMOKpWKefPmUVZWNmNL3uPxcPLkSVauXElv
      b68SAKFQSBHESJJEeno6kUiEUChEQUGBog0wm80z3pSXYRE8waTs5K6/+CqrCsMc3LOXY71e
      ZEFFYPg0DTs+ZnzG+TKGTAtGtRpBjjJ8opXO8QnigKgzUXnD/+CJ//kYy60yo64goa597OjJ
      5d5v/Q3ffvIvWFZiRXPpNz3riEQinDx5klOnTlFaWsq8efOUQXEh0zam/90fQpPJJNFolHA4
      TCwWw+fz8f777yvidzgfJE1NTVRUVJCXl/eF1/tD+nAZsseyuXbFEooy1MT6Q/hIp2z+AhaX
      WlBddwPGzEIsBH57Y4GTbNnUQsaaNSzRDDLZ38G0EaYoajGmp6HWqJFEERUgez1MWuZSYNEi
      cl7yl/pEd3HIsszZs2cZGBhQTCOmLYVUKhXj4+M4HA5CoRDBYJDMzExUKhVut5tkMkk8Hsfl
      crF48eIv/rEviVqtJi8vD5vNRn19PbFYjJdffpm+vj7lDTU4OMjWrVuJxWJs3LhRWfCLoogo
      igwNDTF//nxisRiBQICcnBwkSaKtrU1xyfF6vRgMhsspiNGh159/kqjNWeRrYpyc1FJWt5gc
      IcjQoJcZy+XgMOdG0nlo6UIqR6fYQ4LP29AR8/OxdJ/g9OhKFmgn8ATDn3t+it8nFotx4sQJ
      lixZQm5urjKlkCQJm81Gc3MzDoeDY8eOoVKpsFgsZGdnc/ToUcrLy+nt7WV8fPyyCGI+C41G
      Q3Z2Nm1tbYoRn9vtniGAz8vL43vf+x6xWIx4PM7x48cJhUIsWrSIYDDIf/7nf1JbW8vk5CT9
      /f2Ul5eTm5vLli1b6OjoQKfT0dXVxYoVK768IEZQa8jMsmLQq0HUkZWbhX5aXJBWyl0P3U3w
      pY08/bWfIxvzufGeb/BwvoF0ixmVTkJlu5k1N2zhX554AkftXAyZNsxaNYJKjznXgl48f1vG
      rCyiBgmD8x7Wr/ox/++pR3ixuIScmI4qvXrWvQW6urr4j//4D2UBvHXrVmpqali7di2bN2+m
      paUFgC1btlBeXs7jjz/OiRMnsNlsVFRUcPToUd58803leg6Hg+eee466ujrOnTvHU089RUlJ
      CU888QQajYa5c+fS39/Phg0byMrK4sknn0SjuXKTT1EUqa2txeVy8cwzz5BIJPjqV79KQUEB
      LS0tnD59mttuu02Z+sTjcdxuN8FgkIyMDMxmM7fddhvPPvssaWlprF+/njlz5qBSqbjvvvt4
      4YUXSCQSPPDAA1RUVHyxICZFiqsdQRCE/w/IQiJoYt+TQQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      eOS731i4zv8H4vL8ORkzKucAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
